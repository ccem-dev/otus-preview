!function(){"use strict";angular.module("otus.core.preview",["otus.preview"])}(),function(){"use strict";angular.module("otus.preview",[])}(),function(){"use strict";function CoreSheetContentPreviewService(CoreTemplateLoaderService){function startSheet(scopeReference,elementReference,template){CoreTemplateLoaderService.loadInitForJsonFile(scopeReference,elementReference,template)}var self=this;self.startSheet=startSheet}angular.module("otus.core.preview").service("CoreSheetContentPreviewService",CoreSheetContentPreviewService),CoreSheetContentPreviewService.$inject=["CoreTemplateLoaderService"]}(),function(){"use strict";function CoreTemplateLoaderService($compile,$templateRequest,$templateCache,UiTemplateContentFactory){function loadInitForJsonFile(scopeReference,elementReference,template){scope=scopeReference,element=elementReference,template=template,buildItemTemplate(template)}function buildItemTemplate(template){if(template.itemContainer.length>0){var questions=template.itemContainer;for(var key in questions)UiTemplateContentFactory.create(scope,element,questions[key])}}var self=this,scope=null,element=null;self.loadInitForJsonFile=loadInitForJsonFile}angular.module("otus.core.preview").service("CoreTemplateLoaderService",CoreTemplateLoaderService),CoreTemplateLoaderService.$inject=["$compile","$templateRequest","$templateCache","UiTemplateContentFactory"]}(),function(){"use strict";function UiItemPreviewService(){var self=this;self.currentQuestionToLoad={},self.listMetadata={}}angular.module("otus.preview").service("UiItemPreviewService",UiItemPreviewService)}(),function(){"use strict";function UiTemplateContentFactory($compile,$templateRequest,$templateCache,CalendarQuestionTemplateFactory){function create(scope,element,item){return question=templateFactories[item.objectType].create(scope,element,item),loadItem(question,scope),question}function loadItem(question,scope){var questionCompiled=compileTemplate(question.getDirectiveTemplate(),scope);$("#survey-preview").append(questionCompiled)}function compileTemplate(html,scope){return $compile(html)(scope)}var self=this,question=null,templateFactories={CalendarQuestion:CalendarQuestionTemplateFactory};return self.create=create,self}angular.module("otus.core.preview").factory("UiTemplateContentFactory",UiTemplateContentFactory),UiTemplateContentFactory.$inject=["$compile","$templateRequest","$templateCache","CalendarQuestionTemplateFactory"]}(),function(){"use strict";function otusSheetPreview(){var ddo={scope:{},templateUrl:"node_modules/otus-preview-js/app/ui-preview/sheet/sheet-preview-container.html",retrict:"E"};return ddo}angular.module("otus.preview").directive("otusSheetPreview",otusSheetPreview)}(),function(){"use strict";function questionPreview(UiTemplateContentFactory){var ddo={scope:{},retrict:"E",templateUrl:"node_modules/otus-preview-js/app/ui-preview/item/question/question-preview.html",link:function(scope,element){scope.widget=UiTemplateContentFactory.create(scope,element),console.log(scope.widget)}};return ddo}angular.module("otus.preview").directive("questionPreview",questionPreview),questionPreview.$inject=["UiTemplateContentFactory"]}(),function(){"use strict";function directive(UiItemPreviewService){var ddo={link:function(scope){scope.widget=UiItemPreviewService.currentQuestionToLoad,scope.widgetMetadata=UiItemPreviewService.listMetadata},templateUrl:"node_modules/otus-preview-js/app/ui-preview/item/question/calendar/calendar-question-preview.html",retrict:"E"};return ddo}angular.module("otus.preview").directive("otusPreviewCalendarQuestion",directive),directive.inject=["UiItemPreviewService"]}(),function(){"use strict";function CalendarQuestionTemplateFactory(UiItemPreviewService){function create(scope,element,item){if(UiItemPreviewService.currentQuestionToLoad=item,item.metadata.options.length>0)for(var i=0;i<item.metadata.options.length;i++)UiItemPreviewService.listMetadata[i]=item.metadata.options[i].label.ptBR.formattedText;return new CalendarQuestionTemplate(scope,element,item)}var self=this;return self.create=create,self}function CalendarQuestionTemplate(scope,element,item){function getClassName(){return"CalendarQuestionTemplate"}function getScope(){return scope.uuid}function getExtents(){return self.extents}function getObjectType(){return self.objectType}function getTemplateID(){return self.templateID}function getformattedText(){return self.label}function getDirectiveTemplate(){return"<otus-preview-calendar-question></otus-preview-calendar-question>"}var self=this;self.extents=item.extents,self.objectType=item.objectType,self.templateID=item.templateID,self.dataType=item.dataType,self.label=item.label.ptBR.formattedText,self.getClassName=getClassName,self.getScope=getScope,self.getExtents=getExtents,self.getObjectType=getObjectType,self.getTemplateID=getTemplateID,self.getformattedText=getformattedText,self.getDirectiveTemplate=getDirectiveTemplate}angular.module("otus.preview").factory("CalendarQuestionTemplateFactory",CalendarQuestionTemplateFactory),CalendarQuestionTemplateFactory.$inject=["UiItemPreviewService"]}();